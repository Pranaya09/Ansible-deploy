name: Check and Build Pipeline
on: 
  workflow_dispatch:
  push:
  pull_request:
    branches: [ main ]
jobs:

# Job to run basic checks on the repo 
  Basic Quality Checks:
    runs_on: ubuntu-latest,
    steps:
      - name: checkout files
        uses: actions/checkout@v3

      - name: check if Docker File exists
        runs: |
          if [ -f /{{repo_name}}/Dockerfile ]; then
            echo "====================================="
            echo "        Docker file exists"
            echo "====================================="
          else
            echo "====================================="
            echo "      Docker file dosent exist"
            echo "====================================="
          fi    

      - name: Linting source code
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_PYTHON3: true

# Job to build the dockerfile and push to docker hub
  Build and Push:
    needs: [Basic Checks]
    runs_on: ubuntu-latest
    steps:
      - name: checkout files
        uses: actions/checkout@v3

      - name: Install Docker 
        run: |
          sudo apt update
          sudo apt install apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
          sudo apt update
          apt-cache policy docker-ce
          sudo apt install docker-ce
          sudo chmod 666 /var/run/docker.sock
          sudo systemctl status docker

      - name: Build Docker image
        uses: ryanjfrizzell/action-bpd@master
        with:
          docker_registry_url: 'docker.pkg.github.com'
          docker_registry_owner: '{{ name }}'
          docker_repository: '{{ name }}'
          docker_image: '{{ name }}'
          docker_username: ${{ secrets.docker_username }}
          docker_password: ${{ secrets.docker_password }}
          dockerfile: '{{ /path }}'
      

